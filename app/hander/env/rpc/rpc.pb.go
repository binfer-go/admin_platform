// Code generated by protoc-gen-go. DO NOT EDIT.
// source: rpc.proto

package rpc

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type TaskVerifyRequest struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Status               bool     `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	Remark               string   `protobuf:"bytes,3,opt,name=remark,proto3" json:"remark,omitempty"`
	Rate                 uint32   `protobuf:"varint,4,opt,name=rate,proto3" json:"rate,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TaskVerifyRequest) Reset()         { *m = TaskVerifyRequest{} }
func (m *TaskVerifyRequest) String() string { return proto.CompactTextString(m) }
func (*TaskVerifyRequest) ProtoMessage()    {}
func (*TaskVerifyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{0}
}

func (m *TaskVerifyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TaskVerifyRequest.Unmarshal(m, b)
}
func (m *TaskVerifyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TaskVerifyRequest.Marshal(b, m, deterministic)
}
func (m *TaskVerifyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TaskVerifyRequest.Merge(m, src)
}
func (m *TaskVerifyRequest) XXX_Size() int {
	return xxx_messageInfo_TaskVerifyRequest.Size(m)
}
func (m *TaskVerifyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TaskVerifyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TaskVerifyRequest proto.InternalMessageInfo

func (m *TaskVerifyRequest) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *TaskVerifyRequest) GetStatus() bool {
	if m != nil {
		return m.Status
	}
	return false
}

func (m *TaskVerifyRequest) GetRemark() string {
	if m != nil {
		return m.Remark
	}
	return ""
}

func (m *TaskVerifyRequest) GetRate() uint32 {
	if m != nil {
		return m.Rate
	}
	return 0
}

type TaskVerifyResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TaskVerifyResponse) Reset()         { *m = TaskVerifyResponse{} }
func (m *TaskVerifyResponse) String() string { return proto.CompactTextString(m) }
func (*TaskVerifyResponse) ProtoMessage()    {}
func (*TaskVerifyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{1}
}

func (m *TaskVerifyResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TaskVerifyResponse.Unmarshal(m, b)
}
func (m *TaskVerifyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TaskVerifyResponse.Marshal(b, m, deterministic)
}
func (m *TaskVerifyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TaskVerifyResponse.Merge(m, src)
}
func (m *TaskVerifyResponse) XXX_Size() int {
	return xxx_messageInfo_TaskVerifyResponse.Size(m)
}
func (m *TaskVerifyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TaskVerifyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TaskVerifyResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*TaskVerifyRequest)(nil), "rpc.TaskVerifyRequest")
	proto.RegisterType((*TaskVerifyResponse)(nil), "rpc.TaskVerifyResponse")
}

func init() { proto.RegisterFile("rpc.proto", fileDescriptor_77a6da22d6a3feb1) }

var fileDescriptor_77a6da22d6a3feb1 = []byte{
	// 181 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2c, 0x2a, 0x48, 0xd6,
	0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x2e, 0x2a, 0x48, 0x56, 0x4a, 0xe7, 0x12, 0x0c, 0x49,
	0x2c, 0xce, 0x0e, 0x4b, 0x2d, 0xca, 0x4c, 0xab, 0x0c, 0x4a, 0x2d, 0x2c, 0x4d, 0x2d, 0x2e, 0x11,
	0xe2, 0xe3, 0x62, 0xca, 0x4c, 0x91, 0x60, 0x54, 0x60, 0xd4, 0x60, 0x0d, 0x62, 0xca, 0x4c, 0x11,
	0x12, 0xe3, 0x62, 0x2b, 0x2e, 0x49, 0x2c, 0x29, 0x2d, 0x96, 0x60, 0x52, 0x60, 0xd4, 0xe0, 0x08,
	0x82, 0xf2, 0x40, 0xe2, 0x45, 0xa9, 0xb9, 0x89, 0x45, 0xd9, 0x12, 0xcc, 0x0a, 0x8c, 0x1a, 0x9c,
	0x41, 0x50, 0x9e, 0x90, 0x10, 0x17, 0x4b, 0x51, 0x62, 0x49, 0xaa, 0x04, 0x8b, 0x02, 0xa3, 0x06,
	0x6f, 0x10, 0x98, 0xad, 0x24, 0xc2, 0x25, 0x84, 0x6c, 0x51, 0x71, 0x41, 0x7e, 0x5e, 0x71, 0xaa,
	0x91, 0x07, 0x17, 0x0b, 0x48, 0x54, 0xc8, 0x81, 0x8b, 0x1b, 0x44, 0x7b, 0xe6, 0x15, 0x17, 0xa4,
	0x26, 0x97, 0x08, 0x89, 0xe9, 0x81, 0x9c, 0x89, 0xe1, 0x30, 0x29, 0x71, 0x0c, 0x71, 0x88, 0x39,
	0x4a, 0x0c, 0x49, 0x6c, 0x60, 0x4f, 0x19, 0x03, 0x02, 0x00, 0x00, 0xff, 0xff, 0xd6, 0x93, 0x6d,
	0x5f, 0xe1, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TaskClient is the client API for Task service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TaskClient interface {
	TaskInspect(ctx context.Context, in *TaskVerifyRequest, opts ...grpc.CallOption) (*TaskVerifyResponse, error)
}

type taskClient struct {
	cc *grpc.ClientConn
}

func NewTaskClient(cc *grpc.ClientConn) TaskClient {
	return &taskClient{cc}
}

func (c *taskClient) TaskInspect(ctx context.Context, in *TaskVerifyRequest, opts ...grpc.CallOption) (*TaskVerifyResponse, error) {
	out := new(TaskVerifyResponse)
	err := c.cc.Invoke(ctx, "/rpc.Task/TaskInspect", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TaskServer is the server API for Task service.
type TaskServer interface {
	TaskInspect(context.Context, *TaskVerifyRequest) (*TaskVerifyResponse, error)
}

// UnimplementedTaskServer can be embedded to have forward compatible implementations.
type UnimplementedTaskServer struct {
}

func (*UnimplementedTaskServer) TaskInspect(ctx context.Context, req *TaskVerifyRequest) (*TaskVerifyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TaskInspect not implemented")
}

func RegisterTaskServer(s *grpc.Server, srv TaskServer) {
	s.RegisterService(&_Task_serviceDesc, srv)
}

func _Task_TaskInspect_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TaskVerifyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TaskServer).TaskInspect(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.Task/TaskInspect",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TaskServer).TaskInspect(ctx, req.(*TaskVerifyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Task_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rpc.Task",
	HandlerType: (*TaskServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "TaskInspect",
			Handler:    _Task_TaskInspect_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "rpc.proto",
}
